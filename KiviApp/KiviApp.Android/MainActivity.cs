using Android.App;
using Android.Content.PM;
using Android.OS;

/// Copyright (C) 2020 Leevi Liimatainen - All Rights Reserved

namespace KiviApp.Droid
{
    [Activity(Label = "KIVI Pistelaskuri", Icon = "@drawable/kiviapp_icon", Theme = "@style/MainTheme",
        MainLauncher = true, ConfigurationChanges = ConfigChanges.ScreenSize | ConfigChanges.Orientation,
        ScreenOrientation = ScreenOrientation.Portrait)]
    public class MainActivity : global::Xamarin.Forms.Platform.Android.FormsAppCompatActivity
    {
        protected override void OnCreate(Bundle savedInstanceState)
        {
            TabLayoutResource = Resource.Layout.Tabbar;
            ToolbarResource = Resource.Layout.Toolbar;
            base.OnCreate(savedInstanceState);

            // Popup plugin.
            Rg.Plugins.Popup.Popup.Init(this, savedInstanceState);

            // Checking Android device's screen width and height.
            var metrics = Resources.DisplayMetrics;
            DisplayCalculator.DisplayWidth = ConvertPixelsToDp(metrics.WidthPixels);
            DisplayCalculator.DisplayHeight = ConvertPixelsToDp(metrics.HeightPixels);

            global::Xamarin.Forms.Forms.Init(this, savedInstanceState);
            Xamarin.Essentials.Platform.Init(this, savedInstanceState);
            LoadApplicationSettings();
            LoadApplication(new App());
        }

        /// <summary>
        /// Overriden OnDestroy() -method that also saves current app settings.
        /// </summary>
        protected override void OnDestroy()
        {
            base.OnDestroy();
            SaveAppSettings();
        }


        /// <summary>
        /// Loads previous application settings.
        /// </summary>
        private void LoadApplicationSettings()
        {
            var preferences = Application.Context.GetSharedPreferences("KiviApp", Android.Content.FileCreationMode.Private);
            var altIcons = preferences.GetBoolean("icons", false);
            var showIntro = preferences.GetBoolean("intro", false);

            MainPage.AlternativeIcons = altIcons;
            App.SkipStartingAnimations = showIntro;
        }


        /// <summary>
        /// Saves current application settings.
        /// </summary>
        private void SaveAppSettings()
        {
            var preferences = Application.Context.GetSharedPreferences("KiviApp", Android.Content.FileCreationMode.Private);
            var editor = preferences.Edit();
            editor.PutBoolean("icons", MainPage.AlternativeIcons);
            editor.PutBoolean("intro", App.SkipStartingAnimations);
            editor.Commit();
        }


        /// <summary>
        /// Automatically generated by Xamarin.
        /// </summary>
        /// <param name="requestCode"></param>
        /// <param name="permissions"></param>
        /// <param name="grantResults"></param>
        public override void OnRequestPermissionsResult(int requestCode, string[] permissions, Android.Content.PM.Permission[] grantResults)
        {
            Xamarin.Essentials.Platform.OnRequestPermissionsResult(requestCode, permissions, grantResults);
            base.OnRequestPermissionsResult(requestCode, permissions, grantResults);
        }


        /// <summary>
        /// Helper method to convert screen pixels to dp.
        /// </summary>
        /// <param name="pixelValue">Pixel value that is converted to dp.</param>
        /// <returns></returns>
        private int ConvertPixelsToDp(float pixelValue)
        {
            return (int)((pixelValue) / Resources.DisplayMetrics.Density);
        }
    }
}